{
  "title": "Proposal: Removal of Forked Modules from Terra Classic",
  "authors": ["OrbitLabs"],
  "summary": "OrbitLabs proposes to remove the forked mainline modules from the Terra Classic blockchain to improve maintainability, reduce technical debt, and align with the broader Cosmos ecosystem. For a comprehensive introduction of our teams and qualifications, please take a look at: https://hackmd.io/@orbitlabs/SJiDiG22A",
  "details": "\n## Executive Summary\n\nOrbitLabs proposes to remove the forked mainline modules from the Terra Classic blockchain to improve maintainability, reduce technical debt, and align with the broader Cosmos ecosystem.\n\nFor a comprehensive introduction of our teams and qualifications, please take a look at: https://hackmd.io/@orbitlabs/SJiDiG22A\n\n\n## Current Situation\nThe Terra Classic codebase currently uses several forked versions of Cosmos modules to accommodate its unique features. These forks have caused the codebase to increasingly diverge from the upstream modules, increasing maintenance costs as long as it persits.\n\nWith the current versions of Luna Classic and the upstream modules, we now have the opportunity to:\n\n- Remove the forked modules maintained by the Terra Classic team\n- Integrate the standard upstream modules\n- Port Terra Classic specific changes to the Terrad module itself\n\n\nThis approach would allow Terra Classic to inherit up-to-date securities and features from the Cosmos development team, massively reducing maintenance costs and time.\n\n### Terra Classic Customizations/Forks\n\n#### CosmosSDK:\n\n- **Custom logic for OracleTx**: Support for Oracle transaction priority handling.\n- **Custom staking logic**: Limit validator voting power to 20%.\n\n#### CometBFT (formerly Tendermint):\n- **Oracle Transactions**: Added functionality to process Terra Classic specific Oracle transactions.\n\n#### Wasmd\n- Key Deprecation: The current keys used in Terra Classic's Wasmd fork are deprecated. This affects how contract-related data is stored and accessed within the blockchain state.\n\n\n## Consequences of No Action\nIf we do not address this issue:\n\n- **Increased Maintenance Costs**: \n   - As Terra Classic continues to maintain forked versions of the core Cosmos modules, the burden of keeping these forks in sync with upstream developments will increase. This will require significant ongoing developer resources to manage updates, bug fixes, and compatibility, resulting in increased operational costs.\n\n- **Missed Upstream Improvements**:\n   - By diverging from the mainline Cosmos SDK and related modules, Terra Classic risks falling behind in adopting key enhancements and new features developed by the broader Cosmos community. This can limit Terra Classic's competitiveness and make it more difficult to integrate future technologies, upgrades, performance improvements and other innovations.\n\n- **Increased Security Risks**:\n   - Delayed adoption of upstream security patches and vulnerability fixes will expose the Terra Classic chain to potential exploits. The longer Terra Classic remains on forked, outdated modules, the greater the risk of being affected by known vulnerabilities that have already been fixed in the Cosmos ecosystem.\n\n- **Restrained Developer Ecosystem**:\n   - A codebase that is increasingly out of sync with the mainline Cosmos ecosystem may discourage L1 developers from contributing to Terra Classic. Developers would face additional complexity in learning the codebase, potentially limiting innovation and developer engagement.\n\n\n## Proposed Solution\nWe propose to remove the forked mainline modules and replace them with the standard Cosmos modules. This process will be divided into two phases\n\n### Phase 1\n\n- Unfork CometBFT from [v0.37.4-terra1](https://github.com/classic-terra/cometbft/tree/v0.37.4-terra1) to the mainline [v0.37.4](https://github.com/cometbft/cometbft/tree/v0.37.4) version\n    - This will involve updating the consensus engine to align with the 0.37.4 version of CometBFT\n    - Extensive testing will be required to ensure network stability\n\n\n- Update CosmosSDK from [v0.47.10-terra.1](https://github.com/classic-terra/cosmos-sdk/tree/v0.47.10-terra.1) to [v0.47.10](https://github.com/cosmos/cosmos-sdk/tree/v0.47.10) :\n    - Migrate to the v0.47.10 version of CosmosSDK which is compatible with our target v0.37.4 CometBFT version.\n    - Identify and resolve any conflicts with Terra Classic specific features\n\n- Move the oracle and stake logic to Terrad:\n    - Refactor the oracle module to be compatible with the updated CosmosSDK.\n    - Ensure that all Terra Classic specific oracle functionality is retained.\n\n### Phase 2:\nMigration of Wasmd from [v0.46.0-classic.1](https://github.com/classic-terra/wasmd/tree/v0.46.0-classic.1) to the mainline Wasmd [v0.46.0](https://github.com/CosmWasm/wasmd/tree/v0.46.0)\n- Contract's store migration, to ensure compatibility with existing smart contracts\n- Extensive testing of contract execution and state migrations\n    - Unit Testing: Update existing and create new unit tests for contract store migration logic, state migrations.\n    - Integration Testing: Develop end-to-end tests simulating the entire migration process, including contract deployment, execution, and multi-contract interactions.\n    - State Snapshot Testing: Import a snapshot of the current blockchain state, perform a migration dry run, verify post-migration contract states and functionality, and test rollback procedures.\n\n\n## Benefits\n- Improved maintainability and reduced technical debt\n- Easier adoption of future CosmosSDK updates\n- Improved security through faster implementation of upstream fixes\n- Improved interoperability with other Cosmos-based chains\n- Potential to attract more Cosmos developers to the Terra Classic ecosystem\n\n## Timeline and Milestones\n\n### Phase 1 (estimated 8 weeks):\n- Week 1: Detailed analysis and planning\n- Weeks 2-3: CometBFT unfork and integration\n- Weeks 4-5: CosmosSDK update and conflict resolution\n- Week 6: Oracle and staking logic migration to Terrad\n- Weeks 7-8: Extensive testing, community review and preparation for testnet deployment\n\n### Phase 2 (estimated 10 weeks):\n- Weeks 1-2: Wasmd migration planning and initial implementation\n- Weeks 3-6: Wasmd integration and contract compatibility testing\n- Weeks 7-8: Network-wide testing and performance tuning\n- Weeks 9-10: Final review, documentation and preparation for Testnet deployment.\n\n## Budget\nTotal budget requested: The payment will be divided into two phases and will be requested through two separate spending proposals.\n\n### Phase 1\nFiat value: $16,000 USD\n\n### Phase 2\nFiat value: $20,000 USD\n\n*Total fiat value: $36,000 USD*\n\n*Note: The actual LUNC amount for each phase will be calculated according to the real-time price of LUNC when each spending proposal is submitted.\n\n## KYC Certification\nAs per Proposal [#12129](https://station.terraclassic.community/proposal/columbus-5/12129), reviews approving code on the Terra Classic repositories must be conducted by KYCed individuals. OrbitLabs is KYCed by [sollidproof.io](https://solidproof.io/)\n\nhttps://github.com/solidproof/Projects/blob/main/2024/Kien/KYC_Certificate_SolidProof_Individual_Kien.jpg\nhttps://github.com/solidproof/Projects/blob/main/2024/Tien/KYC_Certificate_SolidProof_Individual_Tien.jpg\nhttps://github.com/solidproof/Projects/blob/main/2024/Tuan%20Tran%20/KYC_Certificate_SolidProof_Individual_TuanTran.jpg\n\n## Progress update\nWe will provide weekly to bi-weekly progress reports throughout the project to ensure transparency and keep the Terra Classic community informed of all developments. In order to maximise engagement and provide real-time updates, we will be using multiple communication channels as outlined below:\n\n- **Twitter Updates**: \n   - We will provide regular updates via our official [Twitter account] (https://twitter.com/orbit__labs). These updates will cover key milestones, development progress, challenges encountered and any adjustments to the timeline. Twitter will also serve as a platform for responding to community requests and providing short updates.\n   - In addition to project-specific updates, we will provide general information about blockchain developments and governance discussions related to Terra Classic.\n\n- **GitHub Commits**: \n   - All code changes will be publicly available in our official GitHub repositories. Each commit will be accompanied by a detailed commit message explaining the scope of the change, the rationale behind the change, and any related technical considerations. \n   - Pull requests (PRs) will be accompanied by comprehensive documentation and will be open for community review. We encourage community developers to participate in discussions on these PRs to ensure maximum transparency and collaboration.\n\n- **Community AMAs**: \n   - At key milestones (such as the completion of major phases) we will organise **Ask Me Anything (AMA)** sessions. These will give the community the opportunity to ask questions directly to the development team. \n   - AMAs will be hosted on Twitter Spaces. We will announce AMAs in advance via Twitter, and any key learnings from these sessions will be summarised in post-AMA updates.ill be summarized in post-AMA updates.\n\n- **Medium/HackMD Blog Posts**: \n   - For deeper, more detailed updates, we will publish periodic blog posts on Medium/HackMD. These articles will serve as comprehensive reports that include project overviews, technical challenges, resolutions, and future roadmaps. \n\n## Conclusion\nBy removing the forked mainline modules, we aim to position Terra Classic for long-term sustainability and growth within the Cosmos ecosystem. We believe this approach balances the need for improvement with prudent risk management and community involvement.\nWe welcome feedback and discussion from the Terra Classic community on this proposal.\n\n",
  "proposal_forum_url": "https://commonwealth.im/terra-luna-classic-lunc/discussion/24923-proposal-removal-of-forked-modules-from-terra-classic",
  "vote_option_context": "Yes: Support OrbitLabs' proposal to remove forked modules from the Terra Classic codebase.\n\nNo: Oppose OrbitLabs' proposal to remove forked modules from the Terra Classic codebase.\n\nAbstain: You do not have a strong opinion and will accept the decision of the majority.\n\nNo with veto: You believe that this proposal is harmful and should not be implemented."
}
